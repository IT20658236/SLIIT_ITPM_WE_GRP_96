{"ast":null,"code":"class AuthenticationService {\n  successfulLogin(userId, name, role, password) {\n    sessionStorage.setItem('authenticatedUserId', userId);\n    sessionStorage.setItem('authenticatedUserName', name);\n    sessionStorage.setItem('authenticatedUserRole', role);\n  }\n  logout() {\n    sessionStorage.removeItem('authenticatedUserId');\n    sessionStorage.removeItem('authenticatedUserName');\n    sessionStorage.removeItem('authenticatedUserRole');\n  }\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUserId');\n    if (user === null) return false;\n    return true;\n  }\n  loggedUserId() {\n    let id = sessionStorage.getItem('authenticatedUserId');\n    if (id === null) return '';\n    return id;\n  }\n  loggedUserName() {\n    let name = sessionStorage.getItem('authenticatedUserName');\n    if (name === null) return '';\n    return name;\n  }\n  loggedUserRole() {\n    let role = sessionStorage.getItem('authenticatedUserRole');\n    if (role != null) return role;\n    return null;\n  }\n}\nexport default new AuthenticationService();","map":{"version":3,"names":["AuthenticationService","successfulLogin","userId","name","role","password","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","loggedUserId","id","loggedUserName","loggedUserRole"],"sources":["C:/Users/Sugandha K A D P/Documents/GIT Project/VScode/ITP/SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd/src/components/Authentication/AuthenticationService.js"],"sourcesContent":["class AuthenticationService {\r\n    \r\n    successfulLogin(userId, name, role, password){\r\n        sessionStorage.setItem('authenticatedUserId', userId);\r\n        sessionStorage.setItem('authenticatedUserName', name);\r\n        sessionStorage.setItem('authenticatedUserRole', role);\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUserId');\r\n        sessionStorage.removeItem('authenticatedUserName');\r\n        sessionStorage.removeItem('authenticatedUserRole');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUserId');\r\n        if (user === null) return false;\r\n        return true;\r\n    }\r\n\r\n    loggedUserId(){\r\n        let id = sessionStorage.getItem('authenticatedUserId');\r\n        if (id === null) return '';\r\n        return id;\r\n    }\r\n\r\n    loggedUserName(){\r\n        let name = sessionStorage.getItem('authenticatedUserName');\r\n        if (name === null) return '';\r\n        return name;\r\n    }\r\n\r\n    loggedUserRole() {\r\n        let role = sessionStorage.getItem('authenticatedUserRole');\r\n        if(role != null) return role;\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n \r\nexport default new AuthenticationService();"],"mappings":"AAAA,MAAMA,qBAAqB,CAAC;EAExBC,eAAe,CAACC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAC;IACzCC,cAAc,CAACC,OAAO,CAAC,qBAAqB,EAAEL,MAAM,CAAC;IACrDI,cAAc,CAACC,OAAO,CAAC,uBAAuB,EAAEJ,IAAI,CAAC;IACrDG,cAAc,CAACC,OAAO,CAAC,uBAAuB,EAAEH,IAAI,CAAC;EACzD;EAEAI,MAAM,GAAE;IACJF,cAAc,CAACG,UAAU,CAAC,qBAAqB,CAAC;IAChDH,cAAc,CAACG,UAAU,CAAC,uBAAuB,CAAC;IAClDH,cAAc,CAACG,UAAU,CAAC,uBAAuB,CAAC;EACtD;EAEAC,cAAc,GAAE;IACZ,IAAIC,IAAI,GAAGL,cAAc,CAACM,OAAO,CAAC,qBAAqB,CAAC;IACxD,IAAID,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;IAC/B,OAAO,IAAI;EACf;EAEAE,YAAY,GAAE;IACV,IAAIC,EAAE,GAAGR,cAAc,CAACM,OAAO,CAAC,qBAAqB,CAAC;IACtD,IAAIE,EAAE,KAAK,IAAI,EAAE,OAAO,EAAE;IAC1B,OAAOA,EAAE;EACb;EAEAC,cAAc,GAAE;IACZ,IAAIZ,IAAI,GAAGG,cAAc,CAACM,OAAO,CAAC,uBAAuB,CAAC;IAC1D,IAAIT,IAAI,KAAK,IAAI,EAAE,OAAO,EAAE;IAC5B,OAAOA,IAAI;EACf;EAEAa,cAAc,GAAG;IACb,IAAIZ,IAAI,GAAGE,cAAc,CAACM,OAAO,CAAC,uBAAuB,CAAC;IAC1D,IAAGR,IAAI,IAAI,IAAI,EAAE,OAAOA,IAAI;IAC5B,OAAO,IAAI;EACf;AAEJ;AAGA,eAAe,IAAIJ,qBAAqB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}