[{"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\index.js":"1","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\serviceWorker.js":"2","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\App.js":"3","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Login\\Login.js":"4","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\FooterComponent.jsx":"5","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ViewStockItem.jsx":"6","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\AddStockItemComponnent.jsx":"7","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\HeaderComponent.jsx":"8","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\UpdateStockItemComponnent.jsx":"9","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\IssueStockItemComponent.jsx":"10","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ListStockItemComponent.jsx":"11","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\IssuedStockItemReportComponent.jsx":"12","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ReceivedStockItemReportComponent.jsx":"13","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\CurrentStockItemReportComponent.jsx":"14","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\LoginStockManagement.jsx":"15","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\services\\StockItemService.js":"16","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Authentication\\AuthenticationDataService.js":"17","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\HeaderBeforLoged.jsx":"18","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Authentication\\AuthenticationService.js":"19"},{"size":568,"mtime":1676699240955,"results":"20","hashOfConfig":"21"},{"size":5227,"mtime":1676699240955,"results":"22","hashOfConfig":"21"},{"size":2972,"mtime":1676699240948,"results":"23","hashOfConfig":"21"},{"size":5590,"mtime":1676699240950,"results":"24","hashOfConfig":"21"},{"size":722,"mtime":1676699240952,"results":"25","hashOfConfig":"21"},{"size":6705,"mtime":1676699240954,"results":"26","hashOfConfig":"21"},{"size":11007,"mtime":1676699240951,"results":"27","hashOfConfig":"21"},{"size":1806,"mtime":1676699240952,"results":"28","hashOfConfig":"21"},{"size":10701,"mtime":1676699240953,"results":"29","hashOfConfig":"21"},{"size":9063,"mtime":1676699240952,"results":"30","hashOfConfig":"21"},{"size":7397,"mtime":1676699240953,"results":"31","hashOfConfig":"21"},{"size":5802,"mtime":1676699240952,"results":"32","hashOfConfig":"21"},{"size":5394,"mtime":1676699240953,"results":"33","hashOfConfig":"21"},{"size":4734,"mtime":1676699240951,"results":"34","hashOfConfig":"21"},{"size":2816,"mtime":1676699240953,"results":"35","hashOfConfig":"21"},{"size":1157,"mtime":1676699240955,"results":"36","hashOfConfig":"21"},{"size":225,"mtime":1676699240949,"results":"37","hashOfConfig":"21"},{"size":1144,"mtime":1676699240952,"results":"38","hashOfConfig":"21"},{"size":1186,"mtime":1676699240949,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jr0r9n",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\index.js",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\serviceWorker.js",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\App.js",["107"],[],"import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport ListStockItemComponent from './components/Stock_Management_(IT20658236)/ListStockItemComponent';\r\nimport HeaderComponent from './components/Stock_Management_(IT20658236)/HeaderComponent';\r\nimport FooterComponent from './components/Stock_Management_(IT20658236)/FooterComponent';\r\nimport AddStockItemComponnent from './components/Stock_Management_(IT20658236)/AddStockItemComponnent';\r\nimport ViewStockItem  from './components/Stock_Management_(IT20658236)/ViewStockItem';\r\nimport UpdateStockItemComponnent  from './components/Stock_Management_(IT20658236)/UpdateStockItemComponnent';\r\nimport IssueStockItemComponent  from './components/Stock_Management_(IT20658236)/IssueStockItemComponent';\r\nimport ReceivedStockItemReportComponent  from './components/Stock_Management_(IT20658236)/ReceivedStockItemReportComponent';\r\nimport IssuedStockItemReportComponent  from './components/Stock_Management_(IT20658236)/IssuedStockItemReportComponent';\r\nimport CurrentStockItemReportComponent  from './components/Stock_Management_(IT20658236)/CurrentStockItemReportComponent';\r\nimport LoginStockManagement  from './components/Stock_Management_(IT20658236)/LoginStockManagement';\r\nimport Login from \"./components/Login/Login\";\r\n\r\n// import Sidebar from './components/Stock_Management_(IT20658236)/Sidebar';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Router>\r\n              {/* <HeaderComponent/> */}\r\n                <div>\r\n\r\n                    <Switch> \r\n                          <Route path=\"/\" exact component={Login} />\r\n                          <Route path = \"/StockItems\" exact component = {ListStockItemComponent}></Route>\r\n                          <Route path = \"/StockItems\" component = {ListStockItemComponent}></Route>\r\n                          <Route path = \"/add-stockitem\" component = {AddStockItemComponnent}></Route>\r\n                          <Route path = \"/view-stockitem/:stockID\" component = {ViewStockItem}></Route>\r\n                          <Route path = \"/update-stockitem/:stockID\" component = {UpdateStockItemComponnent}></Route>\r\n                          <Route path = \"/issue-stockitem/:stockID\" component = {IssueStockItemComponent}></Route>\r\n                          <Route path = \"/recived-stock-report\" component = {ReceivedStockItemReportComponent}></Route>\r\n                          <Route path = \"/issued-stock-report\" component = {IssuedStockItemReportComponent}></Route>\r\n                          <Route path = \"/current-stock-report\" component = {CurrentStockItemReportComponent}></Route>\r\n                          <Route path = \"/StockManagement-Login\" exact component = {LoginStockManagement}></Route>\r\n                          \r\n\r\n                    </Switch>\r\n                  </div>\r\n              <FooterComponent />\r\n        </Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Login\\Login.js",["108","109"],[],"import React, { Component } from 'react';\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom';\r\nimport AuthenticationService from '../Authentication/AuthenticationService';\r\nimport AuthenticationDataService from '../Authentication/AuthenticationDataService';\r\nimport HeaderBeforLoged from '../Stock_Management_(IT20658236)/HeaderBeforLoged';\r\nimport swal from 'sweetalert';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: this.props.match.params.userId,\r\n            \r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMsg: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name]:event.target.value}\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        if(this.state.userId && this.state.password){\r\n            AuthenticationDataService.getUser(this.state.userId)\r\n                .then(\r\n                    response => {\r\n                        if(response.data != null){\r\n                            if(this.state.password === response.data.password){\r\n                                AuthenticationService.successfulLogin(response.data.userId, 'Name', response.data.role)\r\n                                if(response.data.role ==='admin'){\r\n                                    this.props.history.push(\"/StockItems\")\r\n                                }else if(response.data.role ==='Buyer'){\r\n                                    this.props.history.push(\"/StockItems\")\r\n                                }\r\n                                this.setState({showSuccessMsg: true})\r\n                                this.setState({hasLoginFailed: false})\r\n                            }\r\n                            else{\r\n                                this.setState({showSuccessMsg: false})\r\n                                this.setState({hasLoginFailed: true})\r\n                            }\r\n                        }\r\n                        else{\r\n                            swal(\"Error!\", \"Please check , User name and password are incorect !. \", \"warning\");\r\n                            this.setState({showSuccessMsg: false})\r\n                            this.setState({hasLoginFailed: true})\r\n                        }\r\n                    }\r\n                )\r\n        }\r\n        else{\r\n       if(!this.state.userId && !this.state.password){\r\n            swal(\"Please Enter User name and Password !\");\r\n        }\r\n        else if(!this.state.userId || this.state.userId===\" \"){\r\n            swal(\"Please Enter User name  !\");\r\n        }\r\n        else if(!this.state.password || this.state.password===\" \"){\r\n            swal(\"Please Enter Password !\");\r\n        }\r\n            console.log(\"Enter User name and Password\")\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n\r\n        return ( \r\n            <div >\r\n                <HeaderBeforLoged></HeaderBeforLoged>\r\n                <div id='lgnLf'>\r\n                    <h1>hello</h1>\r\n                <img id='lgnLfIMG'  alt=\"Image For Login\"  src={require(\"../../images/imgLGN.png\")} /> \r\n                <div id='lgnDescription'>\r\n                    <h1 style={{ fontSize:48}} class=\"text-center font-weight-normal\"> Stock Management</h1>\r\n                    <p  class=\"text-center font-weight-light\">Auto Mirage (Pvt) Ltd Company <br/> Online Stock Manging System <br/> Autorised Persons Only  </p>\r\n                </div>\r\n                </div>\r\n\r\n                <div id='lgnRght'>\r\n\r\n                    <div id='lgnRght-mini'>\r\n\r\n                        <h1 style={{ fontSize:44}} class=\"ml-5 pt-3 font-weight-normal\"> Loging To Stock Management System</h1>\r\n                             <p  class=\" ml-5 pl-2 font-weight-normal\">Autorised Persons Only ! </p>\r\n\r\n                            <div id='tst1'>\r\n                                <div id='lbl' className='text-right mt-1'>\r\n                                    <label style={{ fontSize:20}}> User Name : </label>\r\n                                </div>\r\n                                <div id='input'>\r\n                                    <input placeholder='Enter User Name here' name='userId' className='form-control' value={this.state.userId} onChange={this.handleChange} />\r\n                                    <small className='text-danger'></small>\r\n                                </div>\r\n                            </div>\r\n                            <div id='tst2'>\r\n                                <div id='lbl1' className='text-right pr-2 mt-'>\r\n                                    <label style={{ fontSize:20}}> Password : </label>\r\n                                </div>\r\n                                <div id='input1'>\r\n                                    <input type='Password' placeholder='Enter Password here' name='password' className='form-control' value={this.state.password} onChange={this.handleChange} />\r\n                                    <small className='text-danger'></small>\r\n                                </div>\r\n                            </div>\r\n\r\n                        <div id='buttonLogin' class=\"text-center\">\r\n                            <button className=\"btnLogin\" onClick= {this.loginClicked}  style={{ verticalAlign: \"middle\" }} ><span>Login</span></button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n         );\r\n\r\n    }\r\n}\r\n \r\nexport default Login;","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\FooterComponent.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ViewStockItem.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\AddStockItemComponnent.jsx",["110","111","112","113","114","115","116","117","118","119"],[],"import React, { Component } from 'react'\r\nimport StockItemService from '../../services/StockItemService';\r\nimport HeaderComponent from '../Stock_Management_(IT20658236)/HeaderComponent';\r\nimport swal from 'sweetalert';\r\n\r\nexport default class AddStockItemComponnent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            errors: {},\r\n            eritemCode: '',\r\n            eritemName: '',\r\n            erdescription: '',\r\n            erprice:'',\r\n            erlotQuantity:'',\r\n\r\n            itemCode: '',\r\n            itemName: '',\r\n            description: '',\r\n            price:'',\r\n            lotQuantity:''\r\n        }\r\n        //bind all value change handler \r\n        this.changeitemCodeHandler = this.changeitemCodeHandler.bind(this);\r\n        this.changeitemNameHandler = this.changeitemNameHandler.bind(this);\r\n        this.changedescriptionHandler = this.changedescriptionHandler.bind(this);\r\n        this.changepriceHandler = this.changepriceHandler.bind(this);\r\n        this.changelotQuantityHandler = this.changelotQuantityHandler.bind(this);\r\n\r\n        this.addStockItem = this.addStockItem.bind(this);\r\n        this.stockRecivedReport = this.stockRecivedReport.bind(this);\r\n        this.stockIssuedReport = this.stockIssuedReport.bind(this);\r\n        this.currentStockReport= this.currentStockReport.bind(this);\r\n    }\r\n\r\n    viewStockItem(stockID){\r\n        this.props.history.push(`/view-stockItem/${stockID}`);\r\n    }\r\n    \r\n    addStockItem(){\r\n        this.props.history.push('/add-stockitem');\r\n    }\r\n    \r\n    currentStockReport(){\r\n        this.props.history.push('/current-stock-report');\r\n    }\r\n    \r\n    stockRecivedReport(){\r\n        this.props.history.push('/recived-stock-report');\r\n    }\r\n    \r\n    stockIssuedReport(){\r\n        this.props.history.push('/issued-stock-report');\r\n    }\r\n    \r\n    //Implemnent functions to get Changed value and set those values to this.state in new object\r\n    changeitemCodeHandler= (event) => {\r\n        this.setState({itemCode: event.target.value});\r\n    }\r\n    changeitemNameHandler= (event) => {\r\n        this.setState({itemName: event.target.value});\r\n    }\r\n    changedescriptionHandler= (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n    changepriceHandler= (event) => {\r\n        this.setState({price: +event.target.value});\r\n    }\r\n    changelotQuantityHandler= (event) => {\r\n        this.setState({lotQuantity: event.target.value});\r\n    }\r\n\r\n    handleSubmit = event => {\r\n           event.preventDefault();\r\n\r\n        let errors = this.validateAll();\r\n        if (this.isValid(errors)){\r\n\r\n        let stockItem = {itemCode: this.state.itemCode, itemName: this.state.itemName, description: this.state.description, price: \"LKR. \"+this.state.price +\".00\", lotQuantity: this.state.lotQuantity};\r\n         console.log('stockItem => ' + JSON.stringify(stockItem));\r\n\r\n         //API call with newly created Stock Item Object\r\n        StockItemService.addStockItem(stockItem).then(res =>{\r\n            this.props.history.push('/StockItems');\r\n            swal(\"Item added !\", \"New Stock Item successfully added to System \", \"success\");\r\n         })\r\n        }\r\n        else{\r\n            let s1 ={...this.state};\r\n            s1.errors = errors;\r\n            this.setState(s1);\r\n        }\r\n    }\r\n\r\n    isValid = (errors) => {\r\n        let keys = Object.keys(errors);\r\n        let count = keys.reduce((acc,curr) => errors[curr] ? acc+1 : acc,0);\r\n\r\n        return count === 0;\r\n    }\r\n\r\n    //Implement Validation For All Input Fileds\r\n    validateAll = () => {\r\n        \r\n        let itemCode1 = this.state.itemCode;\r\n        let itemName1 =this.state.itemName;\r\n        let description1 = this.state.description;\r\n        let price1 = this.state.price;\r\n        let lotQuantity1 = this.state.lotQuantity;\r\n        \r\n        let errors = {};\r\n\r\n        if (!itemCode1 || itemCode1 ===\" \" ) \r\n        {\r\n        this.state.eritemCode =\"Item Code is Required\";\r\n        console.log(this.state.eritemCode);\r\n        errors.itemCode =\"Item Code is Required\"; \r\n        }\r\n        else{\r\n            this.state.eritemCode =\"\";\r\n        }\r\n\r\n        if (!itemName1 || itemName1 ===\" \")\r\n        {\r\n        this.state.eritemName =\"Item Name is Required\";\r\n        errors.itemName =\"Item Name is Required\";\r\n        }\r\n        else{\r\n            this.state.eritemName =\"\";\r\n        }\r\n\r\n        if (!description1 || description1 === \" \")\r\n        {\r\n        this.state.erdescription =\"Description is Required\";\r\n        errors.description =\"Description is Required\";\r\n        }\r\n        else{\r\n            this.state.erdescription =\"\";\r\n        }\r\n\r\n        if (!price1 || price1 === \" \")\r\n        {\r\n        this.state.erprice =\"Price is Required\";\r\n        errors.price =\"Price is Required\";\r\n        }\r\n        else{\r\n            this.state.erprice =\"\";\r\n        }\r\n\r\n        if (!lotQuantity1 || lotQuantity1 === \" \"){\r\n        this.state.erlotQuantity =\"Lot Quantity is Required\";\r\n        errors.lotQuantity =\"Lot Quantity is Required\";\r\n        return errors;\r\n        }\r\n        else{\r\n            this.state.erlotQuantity =\"\";\r\n        }\r\n        \r\n\r\n        return errors;\r\n   \r\n    }\r\n\r\n    handleCancel = event => {\r\n        this.props.history.push('/StockItems');\r\n    }\r\n\r\n  render() {\r\n\r\n    // let {items,errors} = this.state;\r\n    return (\r\n        <div>   \r\n            <HeaderComponent></HeaderComponent>\r\n                <div  id=\"div1\" >\r\n                    <div  id=\"div4\">\r\n                        <div id='sb1'>\r\n                            <img alt=\"\"  src={require(\"../../images/add.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb2'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.addStockItem}> <span>Add Items</span></button> \r\n                        </div>\r\n\r\n                        <div id='sb3'>\r\n                        <img alt=\"\"  src={require(\"../../images/report.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb4'>\r\n                        <h4 className='text-light'><u>Genarate Reports</u></h4>\r\n                        </div>\r\n\r\n                        <div id='sb5'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.currentStockReport}> <span>Curreent Stock</span></button>\r\n                        </div>\r\n                                \r\n                        <div id='sb6'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockRecivedReport}> <span>Stock Recived</span></button>\r\n                        </div>\r\n\r\n                        <div id='sb7'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockIssuedReport}> <span>Stock Issued</span></button>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            <br></br>\r\n               <div id='divView2' >\r\n                    <div className = \"row\">\r\n                        <div id='addStock1' className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Add Stock Item</h3>\r\n                            <div className = \"card-body\">\r\n                                \r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <div className='form-group'>\r\n                                    <label> Item Code: </label>\r\n                                            <input placeholder='Item Code' name='itemCode' className='form-control' \r\n                                                value={this.state.itemCode} onChange={this.changeitemCodeHandler}/>\r\n                                               <small className='text-danger'>{this.state.eritemCode} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Item Name: </label>\r\n                                            <input placeholder='Item Name' name='itemName' className='form-control' \r\n                                                value={this.state.itemName} onChange={this.changeitemNameHandler}/>\r\n                                                <small className='text-danger'>{this.state.eritemName} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Description: </label>\r\n                                            <textarea  placeholder='Description' name='description' className='form-control' \r\n                                                value={this.state.description} onChange={this.changedescriptionHandler}/>\r\n                                                <small className='text-danger'>{this.state.erdescription} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Price: </label>\r\n                                            <input type='number' min=\"1\" placeholder='Price' name='price' className='form-control' \r\n                                                value={this.state.price} onChange={this.changepriceHandler}/>\r\n                                                <small className='text-danger'>{this.state.erprice} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Lot Quantity: </label>\r\n                                            <input type='number' min=\"1\" placeholder='Lot Quantity' name='lotQuantity' className='form-control' \r\n                                                value={this.state.lotQuantity} onChange={this.changelotQuantityHandler}/>\r\n                                                <small className='text-danger'>{this.state.erlotQuantity} </small>\r\n                                    </div>\r\n                                    {/* Imperlment tw0 butto */}\r\n                                    <div className = \"form-group text-center mt-4 \">\r\n                                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-success \" onClick={this.handleSubmit}>Save</button>\r\n                                    <button style={{marginLeft: \"50px\"}} className=\"btn btn-danger\" onClick={this.handleCancel} >Cancel</button>                                   \r\n                                    </div>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\HeaderComponent.jsx",["120"],[],"import React, { Component } from 'react'\r\nimport swal from 'sweetalert';\r\nimport {Link,withRouter} from \"react-router-dom\";\r\n// import {logo} from \"../images/log.png\"\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n        logOutClicked =(event) =>{\r\n\r\n          swal({\r\n            title: \"Log out ??\",\r\n            text: \"If you select ok button you will Log Out from the System !\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n              swal(\"Logged Out Successfully !\", {\r\n                icon: \"success\",\r\n              });\r\n\r\n              this.props.history.push('/');\r\n            } else {\r\n             \r\n            }\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div header class=\"header\">\r\n            <div id='hdLogo'>\r\n                <img alt=\"Logo\"  src={require(\"../../images/logo.png\")} width=\"110\"  height=\"63\" className=\"d-inline-block align-top\" />          \r\n                <a href=\"/StockItems\" class=\"logo\"> <span>Auto</span>Miraj </a>\r\n            </div>\r\n            <div id='hdNav'>\r\n                <nav class=\"navbar\">\r\n                    <a href=\"#home\">Home</a>\r\n                    <a href=\"#vehicles\">Products</a>\r\n                    <a href=\"#services\">About Us</a>\r\n                    <a href=\"#featured\">Contact Us</a>\r\n                    <button className=\"btnLogOut\" onClick= {this.logOutClicked}  style={{ verticalAlign: \"middle\" }} ><span>Log Out</span></button>\r\n                </nav>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent)\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\UpdateStockItemComponnent.jsx",["121","122","123","124","125","126","127","128"],[],"import React, { Component } from 'react'\r\nimport StockItemService from '../../services/StockItemService'\r\nimport HeaderComponent from '../Stock_Management_(IT20658236)/HeaderComponent';\r\nimport swal from 'sweetalert';\r\n\r\n class UpdateStockItemComponnent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        stockID: this.props.match.params.stockID,\r\n        itemCode:'',\r\n        itemName:'',\r\n        description:'',\r\n        price:'',\r\n        lotQuantity:'',\r\n\r\n        errors: {},\r\n        eritemCode: '',\r\n        eritemName: '',\r\n        erdescription: '',\r\n        erprice:''\r\n\r\n    }\r\n    //bind all value change handler \r\n    this.changeitemCodeHandler = this.changeitemCodeHandler.bind(this);\r\n    this.changeitemNameHandler = this.changeitemNameHandler.bind(this);\r\n    this.changedescriptionHandler = this.changedescriptionHandler.bind(this);\r\n    this.changepriceHandler = this.changepriceHandler.bind(this);\r\n    this.changelotQuantityHandler = this.changelotQuantityHandler.bind(this);\r\n\r\n    this.addStockItem = this.addStockItem.bind(this);\r\n    this.stockRecivedReport = this.stockRecivedReport.bind(this);\r\n    this.stockIssuedReport = this.stockIssuedReport.bind(this);\r\n    this.currentStockReport= this.currentStockReport.bind(this);\r\n\r\n}\r\n\r\naddStockItem(){\r\n    this.props.history.push('/add-stockitem');\r\n}\r\n\r\ncurrentStockReport(){\r\n    this.props.history.push('/current-stock-report');\r\n}\r\n\r\nstockRecivedReport(){\r\n    this.props.history.push('/recived-stock-report');\r\n}\r\n\r\nstockIssuedReport(){\r\n    this.props.history.push('/issued-stock-report');\r\n}\r\n\r\n//Implemnent functions to get Changed value and set those values to this.state in new object\r\nchangeitemCodeHandler= (event) => {\r\n    this.setState({itemCode: event.target.value});\r\n}\r\nchangeitemNameHandler= (event) => {\r\n    this.setState({itemName: event.target.value});\r\n}\r\nchangedescriptionHandler= (event) => {\r\n    this.setState({description: event.target.value});\r\n}\r\nchangepriceHandler= (event) => {\r\n    this.setState({price: event.target.value});\r\n}\r\nchangelotQuantityHandler= (event) => {\r\n    this.setState({lotQuantity: event.target.value});\r\n}\r\n\r\n//Implement Update Stock Item function\r\nupdateStockItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    let errors = this.validateAll();\r\n    if (this.isValid(errors)){\r\n\r\n            let stockItem = {itemCode: this.state.itemCode, itemName: this.state.itemName, description: this.state.description, price: this.state.price, lotQuantity: this.state.lotQuantity};\r\n            console.log('stockItem => ' + JSON.stringify(stockItem));\r\n            console.log('stockItem => ' + JSON.stringify(this.state.stockItem));\r\n             //Call api with updated values\r\n            StockItemService.updateStockItem(stockItem,this.state.stockID).then(res =>{\r\n                this.props.history.push('/StockItems');\r\n\r\n                swal(\"Item Updated!\", \"Item Details successfully Updated \", \"success\");\r\n\r\n            });\r\n    }\r\n    else{\r\n        let s1 ={...this.state};\r\n        s1.errors = errors;\r\n        this.setState(s1);\r\n    }\r\n}\r\n\r\nisValid = (errors) => {\r\n    let keys = Object.keys(errors);\r\n    let count = keys.reduce((acc,curr) => errors[curr] ? acc+1 : acc,0);\r\n\r\n    return count === 0;\r\n}\r\n\r\n    //Implement Validation For All Input Fileds\r\n    validateAll = () => {\r\n        \r\n        let itemCode1 = this.state.itemCode;\r\n        let itemName1 =this.state.itemName;\r\n        let description1 = this.state.description;\r\n        let price1 = this.state.price;\r\n        \r\n        let errors = {};\r\n\r\n        if (!itemCode1 || itemCode1 ===\" \" ) \r\n        {\r\n        this.state.eritemCode =\"Item Code is Required\";\r\n        console.log(this.state.eritemCode);\r\n        errors.itemCode =\"Item Code is Required\"; \r\n        }\r\n        else{\r\n            this.state.eritemCode =\"\";\r\n        }\r\n\r\n        if (!itemName1 || itemName1 ===\" \")\r\n        {\r\n        this.state.eritemName =\"Item Name is Required\";\r\n        errors.itemName =\"Item Name is Required\";\r\n        }\r\n        else{\r\n            this.state.eritemName =\"\";\r\n        }\r\n\r\n        if (!description1 || description1 === \" \")\r\n        {\r\n        this.state.erdescription =\"Description is Required\";\r\n        errors.description =\"Description is Required\";\r\n        }\r\n        else{\r\n            this.state.erdescription =\"\";\r\n        }\r\n\r\n        if (!price1 || price1 === \" \")\r\n        {\r\n        this.state.erprice =\"Price is Required\";\r\n        errors.price =\"Price is Required\";\r\n        }\r\n        else{\r\n            this.state.erprice =\"\";\r\n        }\r\n        \r\n        return errors;\r\n   \r\n    }\r\n\r\n\r\n//Get Values From Data base through API and set valus to input fileds\r\ncomponentDidMount(){\r\n  StockItemService.getStockItemById(this.state.stockID).then( (res) =>{\r\n        let stockItem = res.data;\r\n        this.setState({\r\n          itemCode    : stockItem.itemCode,\r\n          itemName    : stockItem.itemName,\r\n          description :stockItem.description,\r\n          price       :stockItem.price,\r\n          lotQuantity :stockItem.lotQuantity\r\n        });\r\n    });\r\n}\r\n\r\n//Cancel Button Function\r\nhandleCancel = event => {\r\n    this.props.history.push('/StockItems');\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <HeaderComponent></HeaderComponent>\r\n                            <div  id=\"div1\" >\r\n                    <div  id=\"div4\">\r\n                        <div id='sb1'>\r\n                            <img alt=\"\"  src={require(\"../../images/add.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb2'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.addStockItem}> <span>Add Items</span></button> \r\n                        </div>\r\n\r\n                        <div id='sb3'>\r\n                        <img alt=\"\"  src={require(\"../../images/report.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb4'>\r\n                        <h4 className='text-light'><u>Genarate Reports</u></h4>\r\n                        </div>\r\n\r\n                        <div id='sb5'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.currentStockReport}> <span>Curreent Stock</span></button>\r\n                        </div>\r\n                                \r\n                        <div id='sb6'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockRecivedReport}> <span>Stock Recived</span></button>\r\n                        </div>\r\n\r\n                        <div id='sb7'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockIssuedReport}> <span>Stock Issued</span></button>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            <br></br>\r\n               <div id='divView2' >\r\n                    <div className = \"row\">\r\n                        <div id='addStock1' className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Stock Item</h3>\r\n                            <div className = \"card-body\"> \r\n                            <form onSubmit={this.handleSubmit}>\r\n                                    <div className='form-group'>\r\n                                    <label> Item Code: </label>\r\n                                            <input placeholder='Item Code' name='itemCode' className='form-control' \r\n                                                value={this.state.itemCode} onChange={this.changeitemCodeHandler}/>\r\n                                                <small className='text-danger'>{this.state.eritemCode} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Item Name: </label>\r\n                                            <input placeholder='Item Name' name='itemName' className='form-control' \r\n                                                value={this.state.itemName} onChange={this.changeitemNameHandler}/>\r\n                                                <small className='text-danger'>{this.state.eritemName} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Description: </label>\r\n                                            <textarea  placeholder='Description' name='description' className='form-control' \r\n                                                value={this.state.description} onChange={this.changedescriptionHandler}/>\r\n                                                <small className='text-danger'>{this.state.erdescription} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Price: </label>\r\n                                            <input placeholder='Price' name='price' className='form-control' \r\n                                                value={this.state.price} onChange={this.changepriceHandler}/>\r\n                                                <small className='text-danger'>{this.state.erprice} </small>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                    <label> Lot Quantity: </label>\r\n                                            <input placeholder='Lot Quantity' name='lotQuantity' className='form-control' \r\n                                                value={this.state.lotQuantity} onChange={this.changelotQuantityHandler} disabled/>\r\n                                    </div>\r\n                                    \r\n                                    <div className = \"form-group text-center mt-4 \">\r\n                                    <button style={{marginLeft: \"10px\"}} className=\"btn btn-primary\" onClick={this.updateStockItem}>Update & Save</button>\r\n                                    <button style={{marginLeft: \"50px\"}} className=\"btn btn-danger\" onClick={this.handleCancel} >Cancel</button>                                   \r\n                                    </div>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n               </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default UpdateStockItemComponnent","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\IssueStockItemComponent.jsx",["129","130"],[],"import React, { Component } from 'react'\r\nimport StockItemService from '../../services/StockItemService'\r\nimport moment from 'moment'\r\nimport swal from 'sweetalert';\r\nimport HeaderComponent from '../Stock_Management_(IT20658236)/HeaderComponent';\r\n\r\n\r\nclass IssueStockItemComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            issuStockID: this.props.match.params.stockID,\r\n            issuedItemCode:'',\r\n            issuedItemName:'',\r\n            issuedItemdescription:'',\r\n            issuedItemprice:'',\r\n            issuedItemlotQuantity:'',\r\n            issuedTo:'',\r\n            companyName:'',\r\n\r\n            error: {},\r\n            ercompanyName:'',\r\n            \r\n            stockItems: []\r\n        }\r\n        this.addStockItem = this.addStockItem.bind(this);\r\n        this.stockRecivedReport = this.stockRecivedReport.bind(this);\r\n        this.stockIssuedReport = this.stockIssuedReport.bind(this);\r\n        this.currentStockReport= this.currentStockReport.bind(this);\r\n\r\n        //bind all fuctions\r\n        this.refreshStock = this.refreshStock.bind(this)\r\n        this.addCompanyNameHandler =this.addCompanyNameHandler.bind(this)\r\n    }\r\n\r\n    \r\n    addStockItem(){\r\n        this.props.history.push('/add-stockitem');\r\n    }\r\n    \r\n    currentStockReport(){\r\n        this.props.history.push('/current-stock-report');\r\n    }\r\n    \r\n    stockRecivedReport(){\r\n        this.props.history.push('/recived-stock-report');\r\n    }\r\n    \r\n    stockIssuedReport(){\r\n        this.props.history.push('/issued-stock-report');\r\n    }\r\n\r\n    //Implemnent function to get Company name and set that values to this.state in new object\r\n    addCompanyNameHandler =(event) =>{\r\n        this.setState({companyName: event.target.value});\r\n    }\r\n\r\n    //Function to Cancle Button\r\n    handleCancel = event => {\r\n        this.props.history.push('/StockItems');\r\n    }\r\n    \r\n\r\n\r\n    issueStockItem(issuStockID){\r\n\r\n        let error = this.validateAll();\r\n            if (this.isValid(error)){\r\n\r\n                //Get system data using moment Librrary\r\n                let currentDateTime = moment().format('YYYY-MM-D | h:mm:ss a');\r\n                //define variable to get all issued item data and Send issued Stock Item data to Stock Report Table\r\n                let issuedStockItem = {itemCode: this.state.issuedItemCode, itemName: this.state.issuedItemName, description: this.state.issuedItemdescription, price: this.state.issuedItemprice, lotQuantity: this.state.issuedItemlotQuantity,issuedTo:this.state.companyName,dateTime:currentDateTime};\r\n                console.log('issuedStockItem => ' + JSON.stringify(issuedStockItem));\r\n                //call API\r\n                StockItemService.addIssuedStockItemToReportTable(issuedStockItem)\r\n                //Display Alter Message\r\n                // alert(\"Item Issed From the Stores To \"+ this.state.companyName +\"\")\r\n\r\n                swal(\"Item Issed!\", \"Item Issed From the Stores To \"+ this.state.companyName +\"\", \"success\");\r\n                \r\n                StockItemService.issueStockItem(issuStockID).then( res => {\r\n                    this.setState({stockItems: this.state.stockItems.filter(stockItem => stockItem.stockID !== issuStockID)});\r\n                    this.refreshStock();\r\n                    this.props.history.push('/StockItems');\r\n                });\r\n            }\r\n            else{\r\n                let s1 ={...this.state};\r\n                s1.error = error;\r\n                this.setState(s1);\r\n                swal(\"Company Name is Required!\", \"Please Enter Receiver's Company Name to Issue Stock Items !. \", \"warning\");\r\n            }\r\n    }\r\n\r\n    isValid = (error) => {\r\n        let keys = Object.keys(error);\r\n        let count = keys.reduce((acc,curr) => error[curr] ? acc+1 : acc,0);\r\n\r\n        return count === 0;\r\n    }\r\n\r\n    //Implement Validation For All Input Fileds\r\n    validateAll = () => {\r\n        \r\n        let companyName1 = this.state.companyName;\r\n\r\n        let error = {};\r\n\r\n        if (!companyName1 || companyName1===\" \") \r\n        {\r\n        this.state.ercompanyName =\"Company Name is Required\";\r\n        console.log(this.state.ercompanyName);\r\n        error.companyName =\"Company Name is Required\"; \r\n        }\r\n        else{\r\n            this.state.eritemCode =\"\";\r\n        }\r\n\r\n        return error;\r\n   \r\n    }\r\n \r\n    //set Issue Item Code \r\n    componentDidMount(){\r\n        StockItemService.getStockItem().then((res) => {\r\n            this.setState({ stockItems: res.data});\r\n        });\r\n        //Get issue item details\r\n        StockItemService.getStockItemById(this.state.issuStockID).then( (res) =>{\r\n            let issuStockItem = res.data;\r\n            this.setState({\r\n                issuedItemCode  : issuStockItem.itemCode,\r\n                issuedItemName : issuStockItem.itemName,\r\n                issuedItemdescription : issuStockItem.description,\r\n                issuedItemprice : issuStockItem.price,\r\n                issuedItemlotQuantity : issuStockItem.lotQuantity,\r\n\r\n            });\r\n        });\r\n    }\r\n    //function to refresh the web page\r\n    refreshStock(){\r\n        this.props.history.push('/StockItems');\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderComponent></HeaderComponent>\r\n                <div  id=\"div1\" >\r\n                    <div  id=\"div4\">\r\n                        <div id='sb1'>\r\n                            <img alt=\"\"  src={require(\"../../images/add.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb2'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.addStockItem}> <span>Add Items</span></button> \r\n                        </div>\r\n\r\n                        <div id='sb3'>\r\n                        <img alt=\"\"  src={require(\"../../images/report.png\")} width=\"85\"  height=\"80\" className=\"d-inline-block align-top\" />\r\n                        </div>\r\n\r\n                        <div id='sb4'>\r\n                        <h4 className='text-light'><u>Genarate Reports</u></h4>\r\n                        </div>\r\n\r\n                        <div id='sb5'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.currentStockReport}> <span>Curreent Stock</span></button>\r\n                        </div>\r\n                                \r\n                        <div id='sb6'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockRecivedReport}> <span>Stock Recived</span></button>\r\n                        </div>\r\n\r\n                        <div id='sb7'>\r\n                            <button className=\"button\" style={{ verticalAlign: \"middle\" }} onClick={this.stockIssuedReport}> <span>Stock Issued</span></button>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n              <br></br>\r\n                 <div  id='divView2'>\r\n                    <div className = \"row\">\r\n                        <div id='addStock1' className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Issue Items</h3>\r\n                            <div className = \"card-body\">\r\n\r\n                                <form>\r\n                                    <div className = \"form-group\">\r\n                                        <label> itemCode : </label>\r\n                                        <input  name=\"itemCode\" className=\"form-control\" \r\n                                            value={this.state.issuedItemCode} disabled/>\r\n                                    </div>\r\n                                    <div className = \"form-group\">\r\n                                        <label> Issued To: </label>\r\n                                        <input className=\"form-control\" name='issuedTo' placeholder='Company Name'\r\n                                        onChange={this.addCompanyNameHandler} />\r\n                                        <small className='text-danger'>{this.state.ercompanyName} </small>\r\n                                    </div>\r\n                                    {/* Imperlment tw0 butto */}\r\n\r\n                                </form>\r\n                                    <div className = \" text-center mt -10\">\r\n                                        <button style={{marginTop: \"10px\"}} onClick = { () => this.issueStockItem(this.state.issuStockID)} className=\"btn btn-danger \">Issue Item</button>\r\n                                        <button style={{marginTop: \"10px\" , marginLeft: \"50px\"}} className=\"btn btn-outline-info\" onClick={this.handleCancel} >Cancel</button>      \r\n                                    </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IssueStockItemComponent\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ListStockItemComponent.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\IssuedStockItemReportComponent.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\ReceivedStockItemReportComponent.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\CurrentStockItemReportComponent.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\LoginStockManagement.jsx",[],[],"C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\services\\StockItemService.js",["131"],[],"import axios from 'axios';\r\n\r\nconst STOCK_API_BASE_URL = \"http://localhost:8080/api/v1/StockItem\";\r\nconst RECEIVED_STOCK_API_BASE_URL = \"http://localhost:8080/api/v1/RecivedStockItem\";\r\nconst ISSUED_STOCK_API_BASE_URL = \"http://localhost:8080/api/v1/IssuedStockItem\";\r\n\r\nclass StockItemService {\r\n\r\n    getStockItem(){\r\n        return axios.get(STOCK_API_BASE_URL);\r\n    }\r\n\r\n    addStockItem(stockItem){\r\n        return axios.post(STOCK_API_BASE_URL,stockItem)\r\n    }\r\n    getStockItemById(stockID){\r\n        return axios.get(STOCK_API_BASE_URL + '/' + stockID);\r\n    }\r\n    updateStockItem(stockItem, stockID){\r\n        return axios.put(STOCK_API_BASE_URL + '/' + stockID, stockItem);\r\n    }\r\n    addIssuedStockItemToReportTable(issuedStockItem){\r\n        return axios.post(ISSUED_STOCK_API_BASE_URL,issuedStockItem)\r\n    }\r\n    issueStockItem(stockID){\r\n        return axios.delete(STOCK_API_BASE_URL + '/' + stockID);\r\n    }\r\n    \r\n    stockRecivedReport(){\r\n        return axios.get(RECEIVED_STOCK_API_BASE_URL);\r\n    }\r\n\r\n    stockIssuedReport(){\r\n        return axios.get(ISSUED_STOCK_API_BASE_URL);\r\n    }\r\n}\r\n\r\nexport default new StockItemService()","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Authentication\\AuthenticationDataService.js",["132"],[],"import axios from 'axios'\r\n\r\nclass AuthenticationDataService{\r\n\r\n    getUser(userId){\r\n        return axios.get(`http://localhost:8080/api/v1/login/${userId}`);\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationDataService();\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Stock_Management_(IT20658236)\\HeaderBeforLoged.jsx",["133","134"],[],"import React, { Component } from 'react'\r\nimport swal from 'sweetalert';\r\nimport {Link,withRouter} from \"react-router-dom\";\r\n// import {logo} from \"../images/log.png\"\r\n\r\nclass HeaderBeforLoged extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div header class=\"header\">\r\n            <div id='hdLogo'>\r\n                <img alt=\"Logo\"  src={require(\"../../images/logo.png\")} width=\"110\"  height=\"63\" className=\"d-inline-block align-top\" />          \r\n                <a href=\"#Home\" class=\"logo\"> <span>Auto</span>Miraj </a>\r\n            </div>\r\n            <div id='hdNav'>\r\n                <nav class=\"navbar\">\r\n                    <a href=\"#home\">Home</a>\r\n                    <a href=\"#vehicles\">Products</a>\r\n                    <a href=\"#services\">Our Services</a>\r\n                    <a href=\"#featured\">About Us</a>\r\n                    <a href=\"#featured\">Contact Us</a>\r\n                </nav>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderBeforLoged)\r\n","C:\\Users\\Sugandha K A D P\\Documents\\GIT Project\\VScode\\ITP\\SLIIT_2nd_Year-ITP_Project-Stock-Management-FrontEnd\\src\\components\\Authentication\\AuthenticationService.js",["135"],[],"class AuthenticationService {\r\n    \r\n    successfulLogin(userId, name, role, password){\r\n        sessionStorage.setItem('authenticatedUserId', userId);\r\n        sessionStorage.setItem('authenticatedUserName', name);\r\n        sessionStorage.setItem('authenticatedUserRole', role);\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUserId');\r\n        sessionStorage.removeItem('authenticatedUserName');\r\n        sessionStorage.removeItem('authenticatedUserRole');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUserId');\r\n        if (user === null) return false;\r\n        return true;\r\n    }\r\n\r\n    loggedUserId(){\r\n        let id = sessionStorage.getItem('authenticatedUserId');\r\n        if (id === null) return '';\r\n        return id;\r\n    }\r\n\r\n    loggedUserName(){\r\n        let name = sessionStorage.getItem('authenticatedUserName');\r\n        if (name === null) return '';\r\n        return name;\r\n    }\r\n\r\n    loggedUserRole() {\r\n        let role = sessionStorage.getItem('authenticatedUserRole');\r\n        if(role != null) return role;\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n \r\nexport default new AuthenticationService();",{"ruleId":"136","severity":1,"message":"137","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":23},{"ruleId":"136","severity":1,"message":"140","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":82,"column":17,"nodeType":"143","endLine":82,"endColumn":103},{"ruleId":"144","severity":1,"message":"145","line":116,"column":9,"nodeType":"146","messageId":"147","endLine":116,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":121,"column":13,"nodeType":"146","messageId":"147","endLine":121,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":126,"column":9,"nodeType":"146","messageId":"147","endLine":126,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":130,"column":13,"nodeType":"146","messageId":"147","endLine":130,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":135,"column":9,"nodeType":"146","messageId":"147","endLine":135,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":139,"column":13,"nodeType":"146","messageId":"147","endLine":139,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":144,"column":9,"nodeType":"146","messageId":"147","endLine":144,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":148,"column":13,"nodeType":"146","messageId":"147","endLine":148,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":152,"column":9,"nodeType":"146","messageId":"147","endLine":152,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":157,"column":13,"nodeType":"146","messageId":"147","endLine":157,"endColumn":23},{"ruleId":"136","severity":1,"message":"140","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":116,"column":9,"nodeType":"146","messageId":"147","endLine":116,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":121,"column":13,"nodeType":"146","messageId":"147","endLine":121,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":126,"column":9,"nodeType":"146","messageId":"147","endLine":126,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":130,"column":13,"nodeType":"146","messageId":"147","endLine":130,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":135,"column":9,"nodeType":"146","messageId":"147","endLine":135,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":139,"column":13,"nodeType":"146","messageId":"147","endLine":139,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":144,"column":9,"nodeType":"146","messageId":"147","endLine":144,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":148,"column":13,"nodeType":"146","messageId":"147","endLine":148,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":113,"column":9,"nodeType":"146","messageId":"147","endLine":113,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":118,"column":13,"nodeType":"146","messageId":"147","endLine":118,"endColumn":23},{"ruleId":"148","severity":1,"message":"149","line":38,"column":1,"nodeType":"150","endLine":38,"endColumn":38},{"ruleId":"148","severity":1,"message":"149","line":11,"column":1,"nodeType":"150","endLine":11,"endColumn":48},{"ruleId":"136","severity":1,"message":"151","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"136","severity":1,"message":"140","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":42,"column":1,"nodeType":"150","endLine":42,"endColumn":44},"no-unused-vars","'HeaderComponent' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'swal' is defined but never used."]